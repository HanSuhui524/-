코딩애플 JavaScript 입문과 웹 UI개발_Level 2-1

♣변수, 사칙연산 실력향상 과제

변수 정리>
var는 재선언o / 재할당 o /범위는 function
let은 재선언x / 재할당o / 범위는 {}
const는 재선언x /재할당 x / 범위는 {}

문제2)깨달은 점:
함수 안에 있던 변수는 바깥으로 탈출하지 않습니다.
그래서 함수 바깥에서 console.log(id) 하면 그냥 위(바깥)에있던 var id = 0 이 출력됩니다.
-------------------------------------
문제3)이자율 계산하기
철수는 은행에 예금을 하러 갔는데 예금 금액에 따라 이율이 달라지는 것을 보고 크게 당황했습니다.
첫 예금액이 5만원 미만이면 이율이 연 15퍼센트,
첫 예금액이 5만원 이상이면 이율이 연 20퍼센트라고 합니다.
그래서 민준이는
(1) 변수에 예금액을 넣으면
(2) 2년 후의 총 예금액을 자동으로 콘솔창에 출력해주는 기능을 자바스크립트로 만들자.
(동작예시)
var 예금액이라는 변수에 60000을 집어넣으면 86400 이게 콘솔창에 출력되어야 합니다. (이자 20%가 2번 붙음)
var 예금액이라는 변수에 10000을 집어넣으면 13225 이게 콘솔창에 출력되어야 합니다. (이자 15%가 2번 붙음)

은행 처음 가는 사람을 위해 이자율 계산 어떻게 하는지 설명드리면 
연 이자가 15% 붙으면
1년 후 총금액 계산할 땐 원금 x 1.15 하면 끝입니다.
연 이자가 20% 붙으면
1년 후 총금액 계산할 땐 원금 x 1.20 
★★정답= 힝;
        var 예금액 = 60000;
        var 미래예금액 = 0;

        if ( 예금액 >= 50000 ){
          미래예금액 = 예금액 * 1.2 * 1.2 ;
        } else {
          미래예금액 = 예금액 * 1.15 * 1.15 ;
        }
        console.log(미래예금액) 
-------------------------------------
문제4)커피 리필을 이상하게 해주는 곳이 있습니다. 최대한 마실 수 있는 커피양을 계산
방금 마신 커피의 3분의 2만큼 총 2번 리필해주는 카페가 있습니다.
예를 들면 처음 커피를 90ml 주문하면 첫 리필은 60ml를 해주며, 그 다음 리필은 40ml를 해주는 카페입니다.
그럼 처음 주문한 커피 양에 따라서 최대한 마실 수 있는 커피를 콘솔창에 계산해주는 코드를 작성
★정답= 굿
        var first =360;
        var total = 0;
        total= first + (first * 2/3) + ( first * 2/3 * 2/3)
        console.log(total);
-------------------------------------
문제5)간단한 퀴즈 UI
<p>태조 이성계가 태어난 년도는?</p> // 1335년도 이다.
<input type="text" id="answer">
<button id="send-answer">제출</button>

<script>
  여기에 기능 알아서 만드십시오
</script>
유저가 <input>에 답을 적고 제출버튼을 누를 수 있는 퀴즈 UI 입니다.
1. 유저가 답을 맞추면 alert('성공');
2. 유저가 답을 3번 찍어서 못맞추면 alert('멍청아') 를 띄워봅시다.

tip)한글부터 짜면 됩니다.
제출버튼 누를 때 
유저가 입력한 답안이 '1335'면 alert('성공')
유저가 제출버튼 누른 횟수가 ★3회 이상이고 답안도 못맞추면 alert('멍청아')
출력.
제출버튼 누른 횟수도 var 변수로 어딘가 기록하면 되겠군요.
★정답= 힝;어려워!!!!!
<script>
  var count = 0;
  document.querySelector('#send-answer').addEventListener('click', function(){
    count += 1; //도전 횟수 카운팅.
    var 유저답안 = document.querySelector('#answer').value;
    if (유저답안 == '1335') {
      alert('성공')
    } else if (count >= 3 && 유저답안 != '1335'){
      alert('멍청아')
    }
  });
</script>

var 유저답안 = document.querySelector('#answer').value;
이걸 이벤트리스너 바깥에 넣으면 왜 안되나요?

A. 변수를 언제 만들지 잘 결정해야합니다.
<script>안에 그냥 있는 코드는 새로고침시 1회 실행됩니다.
이벤트리스너 안에 있는 코드는 이벤트 발동시 1회 실행됩니다.

★※ ** 거듭제곱. x ** y
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
♣setTimeout 타이머주는 법
        setTimeout(function() {
          console.log('안녕')
        }, 1000) //1000밀리 초는 1초다. 2000은 2초
=1초후에 콘솔에 안녕이 출력됨.
★★setTimeout(function() {}, ms) = 'ms후에' 함수 실행 
콜백 함수 자리엔 만들어둔 함수를 넣을 수 있음.

2초후에 클래스 alert 숨기기.
        setTimeout(function() {
          $('.alert').hide(); //숨기는 기능.
        }, 2000)
-------------------------------------
★★setInterval(function() {}, ms) = 'ms초 마다' 코드 실행.(숫자가 올라간다)
        setInterval(function() {
          console.log('뿅');
        },2000)
-------------------------------------
if var function 은 자바스크립트 문법.(뭔가 담거나 축약하고 싶을때 사용)
document.querySelector()  setTimeout()  alert() 들은 브라우저 사용법.web api라고도 함.
-------------------------------------
        setTimeout(함수, 3000) // 함수() 이렇게 쓰지마. 이름만 써
        function 함수() {
          console.log('안늉')
        }
★★콜백 함수 자리에는 만들어둔 어떠한 함수도 넣을 수 있다.
-------------------------------------
        addEventListener(function() {
        }) //이렇게 길고 긴 이벤트리스터의 함수 안에도

function 함수() {
          console.log('안늉')
        }
↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
addEventListener(함수)
이렇게 어떠한 함수든 넣어서 쓸 수 있다.
-----------------------------------------
숙제1) <div class="alert alert-danger">
      5초마다 문자를 1씩 감소
    </div>

위에서 만든 <div>안에 "5초 이내 구매시 사은품 증정" 이라는 문자가 있습니다.
1초마다 5라는 문자를 1씩 감소시켜봅시다.
0이 되면 <div>를 안보이게 처리합시다. 
(힌트) 5라는 문자만 <span id="num">5</span> 이걸로 감싸면 html 조작하기 쉬워집니다. 
나의 오답=
        var s = 5;
        setInterval(function() {
          $('.alert').html(s -=1);
        },1000)
        if (s = 0) {
          $('alert').hide();
        }
★★정답=
        var count = 5;

        setInterval(function(){
          count -= 1;
          if (count >= 0){
            document.querySelector('#num').innerHTML = count;
          } if(count < 0 ) {
            $('.alert').hide();
          }
        }, 1000);
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
♣정규식으로 이메일형식 검증해보기
브라우저 콘솔창에 'abc'.includes('a') 입력하면 true출력 됨.
★★includes()는 문자안에 이 문자가 포함되나 확인하는 함수
숫자가 1회 출현 하냐? A로 끝나냐? 한글이 들어있냐? 영어가 들어있냐? = ★이런건 못해!
하지만 '정규식'쓰면 문자 검사 가능!

/a/ 이런게 정규식임. 정규식이란? 문자를 검사 할 수 있는 식.
/a/.test('abcde') 는 true출력. abcde안에 a가 있으면 true란 뜻.
/[a-z]/.test('abcde')는 true. abcde안에 a부터 z 사이의 범위가 포함되는지 검사 가능.
/[A-Z]/.test('abcde')는 false. 대문자범위. 없어.
/[A-Z]/.test('abcdA')는 true. 하나라도 있으면 진실.
/[a-zA-Z]/.test('abcdA')는 true. 아무 알파벳 중에서라는 범위.
/[ㄱ-ㅎ]/.test('ㅇㄹ')는 true.  한국어 범위
/[ㄱ-ㅎ가-힣]/.test('바우')는 true. 아무 한국어 문자 하나 범위.
/[ㄱ-ㅎ가-힣]/.test('ㅏ')는 false.자음만 검사.
/[ㄱ-ㅎ가-힣ㅏ-ㅣ]/.test('ㅏ')는 true. 모음도 검사
/[0-9]/.test(ㅋㅋ123)는 true. 모든 숫자 범위
/\S/.test('ㅋㅋ') 는 true. 아무 문자 1개 범위.특수 기호 포함
/^a/.test('gfd')는 false. a라는 글자로 시작하냐란 뜻
/a$/.test('fsga')는 true. a라는 글자로 끝나냐란 뜻
/a|b/.test('fsga')는  true. a또는 b가 들어있냐란 뜻
/\S+@\S+\.\S+/.test('aaa@bbb.ccc') .은 특수한 문법이라 앞에 \백슬래쉬 쓴다. \S는 아무 한글자 뜻함. \S+ 플러스는 모든 문자를 앞에까지 계속 검사해 보란뜻.

\. 이라는 기호는 왜 이렇게 썼냐면 마침표는 정규식에서 특수한 문법이기 때문에
마침표 문법을 쓰는게 아니라 진짜 마침표를 찾아달라라는 의미로 쓰려면 백슬래시를 앞에 붙여야합니다.
대충 쓴 이메일 검사 정규식임. @이 하나만 쓰기 등..
------------------------------------------------
과제1)이메일 검사 ★★정답=
$('form').on('submit',function(e){
  var 입력한값 = document.getElementById('email').value;
  if ( /\S+@\S+\.\S+/.test(입력한값) ){
    alert('이메일형식아님')
    e.preventDefault();
  }
});
----------------------------------------------
과제2)폼 전송시 유저가 입력한 비번에 영어 대문자가 적어도 1개 있는지 검사해봅시다.
없으면 alert() 띄우거나 맘대로 합시다.
★★정답=
$('form').on('submit',function(e){

  var 비번 = document.getElementById('pw').value;
  if ( /[A-Z]/.test(비번) == false ){
    alert('대문자없는데요')
  }
});
1. 패스워드 <input>엔 id="pw" 이런거 부여해서 일단 셀렉터로 입력값을 찾습니다. 
2. /[A-Z]/.test(비번) 이걸 해서 false가 남으면 alert 띄우라고 코드짰습니다.
이제 전송버튼 누르면 대문자 있는지 검사해줍니다.  
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
♣코드 3줄로 캐러셀 (이미지 슬라이드) 만들기
one-way 애니메이션 들어있는 ui만들기
1. 시작화면 만들기
2. 최종화면 만들기
3. 원할때 최종화면으로 변하게 js
4. transition: all 1s;추가

버튼 1,2,3 눌렀을때 사진1,2,3 각각 보여주기.
      <script>
        $('.slide-1').on('click', function() { //1번 사진 보여주세요
          $('.slide-container').css('transform', 'translateX(0vw)');
        })
        $('.slide-2').on('click', function() { //2번 사진 보여주세요
          $('.slide-container').css('transform', 'translateX(-100vw)');
        })
        $('.slide-3').on('click', function() { //3번 사진 보여주세요
          $('.slide-container').css('transform', 'translateX(-200vw)');
        })
      </script>
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
♣코드 3줄로 캐러셀 (이미지 슬라이드) 만들기2
다음 버튼 만들기 . if
=다음 버튼 누르면
지금 보이는 사진이 1이면 2번 사진 보여주세요
지금 보이는 사진이 2이면 3번 사진 보여주세요

        var 지금사진 = 1;

        $('.next').on('click', function() {
          if(지금사진 == 1) {
          $('.slide-container').css('transform', 'translateX(-100vw)');
        
          }
        });
----------------------------------------------------
★★다음 버튼 이전 버튼!
        var 지금사진 = 1;
//다음 버튼
        $('.next').on('click', function() {
          if(지금사진 == 1) {
          $('.slide-container').css('transform', 'translateX(-100vw)');
          지금사진 +=1;  
        } else if(지금사진 == 2) {
            $('.slide-container').css('transform', 'translateX(-200vw)');
            지금사진 +=1;  
          }
        });
//이전 버튼
        $('.before').on('click', function() {
          if(지금사진 == 3) {
          $('.slide-container').css('transform', 'translateX(-100vw)');
          지금사진 -=1;  
        } else if(지금사진 == 2) {
            $('.slide-container').css('transform', 'translateX(0vw)');
            지금사진 -=1;  
          }
        });
--------------------------------------------
잘 보면 다음버튼 누를 때
if 지금사진이 1이면 -100vw 이동
if 지금사진이 2면 -200vw 이동
if 지금사진이 3이면 -300vw 이동
이렇게 코드짜고 있지 않습니까. 뭔가 규칙이 보이는데요 
그럼 애초에 if문 필요없이
다음버튼 누르면 'translateX(-지금사진vw)' 만큼 이동해주세요~ 라고 코드한줄 짜면 끝일듯요 
★★정답=
        var 지금사진 = 1;
        $('.next').on('click', function() {
        지금사진 ++;
        $('.slide-container').css('transform', 'translateX(-'+(지금사진-1)+'00vw)')
        });

        $('.before').on('click', function(){
        지금사진 --;
        $('.slide-container').css('transform', 'translateX(-'+(지금사진-1)+'00vw)')
                })

★★ 승민님 팁=
`translateX(${(현재사진 - 1) * 100}vw)`
---------------------------------------------------------
지금 사진에서
다음 버튼 누르면
다음 사진 넘어가고
사진 갯수 초과는 안되게

이전 버튼 누르면 
이전 사진 넘어가고
사진 갯수 미만은 안되게
        var 지금사진 = 1;
        $('.next').on('click', function() {
        지금사진 ++;
        if(지금사진<5) {
          $('.slide-container').css('transform', 'translateX(-'+(지금사진-1)+'00vw)')
        } else {
          지금사진 =4;
        }
        });

        $('.before').on('click', function(){
        지금사진 --;
        if(1<지금사진<3) {
        $('.slide-container').css('transform', 'translateX(-'+(지금사진-1)+'00vw)')
        }  else {
          지금사진 =0;
        }
        });
★★★규리님 정답은 사진 파일
승민님ㅇ ㅣ알려준 ${} 리터럴
얕은 복사, 깊은 복사
...배열명 = 배열 []괄호 벗김
{...객체명} = 객체 {} 벗기지만 , 그걸 다시 좌측처럼 객체 괄호{} 다시 감싸야되

★★★★★★★★★★★★★★★★★★
'trans;ateX(' + (현재사진-1) * -100 + 'vw)';
이것을 리터럴 쉽게 변환하면 'translateX(${(현재사진-1)* -100}vw)';
' + (현재사진-1) * -100 + ' 이 부분이 ${(현재사진-1)* -100} 으로 변함
★★★★★★★★★★★★★★★★★★
let obj1 = [ 1,2,3]; //배열 [] 안에 든거
console.log(...obj1); // 1,2,3 이되서 ...은 배열 []괄호를 벗겨버린다.
★★★★★★★★★★★★★★★★★★
let obj1 = { 1,2,3}; // 객체 {}안에 든거
let obj2 = { ...obj1}; // {1,2,3} 나온다. 객체는 괄호 못벗기지만 벗겨도 벗긴놈을 {}객체 안에 다시 넣으면 가능... 이것은 ★★★얕은 복사
승민님 영상 다시 봐봐

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
♣함수의 return 문법 & 소수점 다루기 = vs코드 파일 없.
함수 function 문법>
- 긴 코드 짧게 축약해서 쓸 수 있음
- 파라미터로 기능업그레이드도 가능
- 오늘 배울 return을 쓰면 함수를 쓰고나서 원하는 값을 그 자리에 퉤 뱉을 수도 있습니다. 
 return을 만나면 함수가 바로 종료
--------------------------------------
function 함수(){
  return 123
}
console.log(함수());  //123
그래서 진짜인지 확인하기 위해 함수() 실행하고나서 123을 남기라고 적었습니다.
 -------------------------------------
프로그래밍의 함수문법은 수학의 함수문법과 용도가 똑같습니다

숫자를 집어넣으면 규칙에 따라 다른 숫자가 나오는 변환기역할을 합니다. 
무슨 이차함수 공식외우고 그게 중요한게 아니라
함수는 그냥 x 집어넣으면 x + 2 나오는 변환기역할을 하는 수식입니다.

프로그래밍에서의 함수도 마찬가지로 
자료를 집어넣으면 규칙에 따라 다른 자료가 나오는 변환기 역할을 할 수 있습니다.
변환기 만들 때 return 문법이 유용하게 사용
 -------------------------------------
문자->문자 변환기
그거 말고도 숫자를 넣으면 3의 배수 여부를 true/false로 뱉는 함수(숫자->true/false)
문자를 넣으면 a가 몇개 들어있는지 뱉는 함수 
그런 식의 변환기 만들어쓰고 싶으면 return 문법 쓰면 됩니다
 -------------------------------------
※소수점 있는 숫자 연산시 주의점!
컴퓨터는 2진법으로 설계되어있습니다.그래서 숫자도 2진법 숫자만 알아들을 수 있습니다. 
컴퓨터에게 10 + 20 연산하라고 하면
전부 2진법으로 바꿔서 1010 + 10100 으로 연산하고 다시 10진법으로 바꿔서 보여줍니다. 

근데 2진법의 문제가 있는데 
1.1 이런 숫자는 2진법으로 바꾸면
1.00011001100110011001100 ...
무한히 반복됩니다.

이 세상엔 무한한 숫자를 저장할 수 있는 저장장치는 없기 때문에
컴퓨터는 적절히 끊고 반올림해서 저장합니다.
1.00011001100110011001101
이런 식입니다. 그래서 소수점 연산은 아주 작은 오차가 발생합니다.

해결하고 싶으면
1. 덧셈하기 전에 10 곱해서 덧셈하고 10으로 나누든가 
2. 외부라이브러리 쓰든가 
3. 오차는 무시할 정도로 작으니 그냥 반올림하든가 
하면 됩니다. 아주 정확한 계산이 필요한게 아니면 대부분 그냥 반올림하면 됩니다.
 -------------------------------------
★★소수점 몇자리까지 반올림?
숫자.toFixed(몇자리); 
var num = (a * 1.1 ).toFixed();

자바스크립트 + 연산자 특징
'문자' + 123 => '문자123'
'문자'+'문자' => '문자문자'

★★문자를 숫자로 변화
parseFloat('123')
parseInt('123') 

오늘의 교훈:
1. 함수로 자료변환기 제작 가능
2. 숫자 연산시 주의점
---------------------------------------
숙제1)함수에 분과 초를 차례로 파라미터로 입력하면 ms단위로 바꿔서 뱉어주는 함수를 만들어봅시다.
(1초 == 1000ms 입니다)
(동작예시)

console.log(함수(1,30))
이렇게 사용하면 콘솔창에 90000이 출력되어야합니다
(90초인데 x 1000 하면 90000)

console.log(함수(2,10))
이렇게 사용하면 콘솔창에 130000이 출력되어야합니다
(130초인데 x 1000 하면 130000)

★★정답=
function 함수(a, b){
  var result = (a * 60 + b) * 1000;
  return result
}
---------------------------------------
숙제2)가격을 파라미터로 입력하면 10% 할인가를 뱉는 함수를 만들어봅시다.
근데 첫 구매여부도 true/false로 둘째파라미터에 입력해서 첫 구매가 맞을 경우 추가로 1.5 달러도 할인해줘야합니다. 
주의사항은 가격으로 10.3 이런거 넣으면 뒤에 소수점 길게 나올 수도 있으니 알아서 처리해보든가 합시다

(동작예시)
console.log(함수(70, false))
이렇게 사용하면 콘솔창에 63이 출력되어야합니다
(70의 10% 할인가격이고 추가할인 없음)

console.log(함수(10, true))
이렇게 사용하면 콘솔창에 7.5가 출력되어야합니다
(10의 10% 할인가격 9에 추가할인 1.5 해줌)

★★정답=
function 함수(a, b){
  var result = a * 0.9;
  if (b == true) {
    result = result - 1.5;
  }
  return result
}
근데 함수(10.3, true) 이런거 하면 소수점이 길게 나오기 때문에 반올림해서 결과를 보여주는 것도 좋겠군요
return parseFloat(result.toFixed(2)) 
